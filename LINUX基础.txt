

下载SSH，SSH客户端连接远程服务器


linux常用命令二三十个
目录相关的命令
pwd----路径（表示我们现在所处的命令）
ls-----列出当前所有的文件（蓝色字代表文件夹，白色代表文件）
cd （文件名字）------打开某个文件夹
cd ..-----打开上一级路径文件
cd .-----打开当前目录
cd ../..-----回到家目录
cd -    ---------和上一级命令来回切换
''里面为了显示是个完整的文件
Tab自动补全（输入前几个字母+Tab自动补全，如果有多个，不能确定，连续按两次Tab会罗列出每个文件名）
方向键（上），可以取得历史命令，方便更改。

clear-----清空命令
cd ~-------回到家目录

ls -l-----以列表的形式罗列
ls -a----显示隐藏文件
ls -l -a-------所有文件罗列出来
ls -l -h-------按照kb显示，没有h是字节显示文件大小
ls -lha--------可以结合起来使用
ubantu的操作系统，后面以.存在的（罗列后最后面）同理创建隐藏文件在前面加个点就行了

ls的通配符
ls *.txt----找出所有后缀为txt文件，同理txt可以更换为其他后缀




touch aa.txt----创建文件(touch只能创建文件)
touch bb--------本质上也是txt文件
mkdir cc-------创建文件夹
touch .aa.txt--------创建隐藏文件


rm aa.txt-----移除文件aa(删除)
rm -d(或者r) cc------移除文件夹


mkdir bb-----创建文件夹bb
cd bb
touch test.txt
cd ..
mv bb aa-----移动bb到aa下

cp bb.txt aa-----把bb复制到aa文件夹内
cp -r aa/bb .-----把aa下的bb文件夹移动到当前文件夹下
cp,mv的特殊情况
mv 125.odt ./126.odt-----移动到当前目录并改名也可以移动到别的文件夹下改名字
cp 125.txt aa/128.txt-----把125.txt(aa目录下的)复制到当前文件夹下并改名字为128.txt


rm --help----帮助
man rm ---用户手册展示
其他的帮助命令,与以上两个相同


ls /----罗列根目录下文件
ls /home-----罗列home下的目录

which ls   查看ls命令的位置
which cd 为空,cd是shell内置命令

/bin   binary二进制文件,普通命令
/sbin  system binary,系统二进制文件,需要有系统权限
/usr/bin   用户安装的应用权限
/usr/sbin   超管安装的应用程序

文件搜索
find / -name 125------叫125的文件
find /home -name 125.txt
ctrl+c------终止掉命令的执行
find /home -name '125*'

find / -iname------忽略大小写
find / -size  (1size=512字节)    理解为数据块
find / -size +1 (1size=512字节)    1size=0.5kb  +代表大于
find / size 7   准确查找 数据块大小为7的数据，6.几也默认为7


ls -l   与ll 命令相同

通过所属人来送搜
find /home/siki/Desktop/ -user siki
find /home/siki/Desktop/ -mmin ―5------在5min之内被更改+5在五分钟之前的


按照文件类型进行搜索
find /home/siki/Desktop/ -type （f，d，l）  f代表文件，d代表文件夹，l代表软连接（相当于快捷方式）
搜索两个条件一条命令，中间连接  -a，（and）；-o（or或者的关系）

ls -i；ls -li  -----通过id罗列出来，linux，每个文件都有个id

locate 125.txt  -----搜索特别快，全局搜索，包含125.txt就会显现出来，文件夹内包含123.txt也会被搜索出来
locate有自己的搜索库，所以locate搜索快（缺点搜索库不是实时更新，每隔一段时间更新）
sudo update  更新搜索库  （sudo代表管理员权限，需要输入密码）



查看文本文件内容
cat （文件名字）
more （文件名）
二者都是查看文件内容，cat直接显示所有，more分页显示
cat -b （文件名）空格不标行号
cat -n （文件名）空格也标记行号

抓取 grep（搜索关键字显示当行的内容）
grep （关键字） （文件名字）
grep -n （关键字） （文件名）----搜索包含关键字的行
grep -v （关键字） （文件名）----搜索抓取不带关键字的行
grep '^#' （文件路径） ^以#开头
grep 'a$' (文件路径)    $ 以什么什么结尾的文件

echo 回显命令
echo hello > (文件名)---显示在文件内，覆盖
echo hello >> (文件名)----追加到文件尾
命令 > （文件名） 命令有结果显示在文件内
>    >>  ----输出符，后面接的文件名字，可以是存在的，也可以是不存在的，不存在的会创建一个文件显示



管道：把一个命令的输出，通过管道连接，作为另一个命令的输出
ls -lh | grep 125.txt -----从第一个罗列出来的内容，抓取125.txt（|相当于管道）


软连接---（相当于快捷方式）
touch aa/abc
ln aa/abc abc-sofylink---创建aa文件夹下abc文件的软链接




添加用户
useradd （用户名）------没有权限，需要root用户权限
sudo useradd （用户名）----超管权限，需要输入密码
cat /etc/passwd -----查看新用户是否设置成功
passwd （用户名）---设置密码---发现没有权限；sudo passwd （用户名）----填写密码（有可能验证当前超管用户的密码再输入，新用户的密码）

useadd xx（m：创建家目录；g：指定所在组选项）
xx为参数，不加参数，ls查询不到
useradd g ---------先用id （用户名）查询id，里面显示组名
sudo useradd g （组名） （创建的用户名）

启用root
先设置root用户密码    sudo passwd root

切换用户
su （用户名）
ctrl+d 退出回到之前用户或者 exit
su - （用户名）  ----回到用户名的家目录

用户的删除
userdel （用户名）
userdel -r （用户名）同时删除用户和家目录
userdel -f （用户名）强制删除-----运行的时候可以强制删除

用户组
刚开始有个和用户同名的初始组，后来可以添加附加组
groupadd gruop1
cat /etc/group 查看目前有什么组
groupmod -n （新名字） （要给用户组改名字的对象）
groupdel （用户组名字）

id siki   -----查所有id，用户id，组id，附加组的id

cat /etc/passwd----查看有多少个用户。

shell---翻译器，让机器听的懂语言
cat /etc/shells-----查看所有的shell
chsh=---切换shell，填写新的shell


用户组的配置文件
cat /etc/group  ----查看用户组
  影子文件存放密码
  cat /etc/shadow
  cat /etc/gshadow


  内置命令，外置命令
  内置更快

  whoami----查看当前命令
  who  查询打开的用户

  usermod -g （修改到组用户名） （目前的组用户名）--修改初始组
  usermod-G （修改到的组用户名1，2，3） （目前的用户名）

附加组的命令，是把所有附加组修改，若添加需要把前面的修改一起写出来，否则会被替代


usermod -s/bin/sh user1   修改shell的另一个命令

文件权限的控制
十个字符，
第一个字母是目录还是文件
d是目录
-文件
另外九个三个三个一组，（用户）（组）（其他人）

r:可读
w：可写 （修改）
x：可执行（删除和创建）
-没有权限、



权限修改
只有文件所有者和超管可以修改文件权限

格式一
chmod （ugoa）（+―=）（rwx）
例：chmod u+r 126.txt
chmod u―r 126.txt
chmod u=rwx 126.txt
格式二
r=4，w=2，x=1
r--rw-rwx  467（表示）
例：chmod 467 126.txt

chmod -R （权限） （文件名字）修改文件夹及文件夹内的文件



chmod----修改文件权限
chown----修改所属人权限（权限不够在前面+sudo）
chgrp-----修改所属组权限（权限不够在前面+sudo）
-R-------修改文件夹下的所有文件

sudo apt-get install -y docker.io--------安装docker

newgrp - docker---------直接相同用户重新登录docker










